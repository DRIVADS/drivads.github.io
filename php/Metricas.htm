<!doctype html>
<html lang="en" data-bs-theme="auto">
  <head><script src="https://getbootstrap.com/docs/5.3/assets/js/color-modes.js"></script>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="generator" content="DRIVADS">
    <title>Historial - SMMA</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@docsearch/css@3">

	<link href="https://getbootstrap.com/docs/5.3/dist/css/bootstrap.min.css" rel="stylesheet">

	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>

		<!-- Favicons -->
	<link rel="apple-touch-icon" href="../imgs/Captura.png" sizes="180x180">
	<link rel="icon" href="../imgs/Captura.png" sizes="32x32" type="image/png">
	<link rel="icon" href="../imgs/Captura.png" sizes="16x16" type="image/png">
	<link rel="mask-icon" href="https://getbootstrap.com/docs/5.3/assets/img/favicons/safari-pinned-tab.svg" color="#712cf9">
	<link rel="icon" href="../imgs/CapturaIcono.ico">
	<meta name="theme-color" content="#712cf9">


    <style>
      .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
      }

      @media (min-width: 768px) {
        .bd-placeholder-img-lg {
          font-size: 3.5rem;
        }
      }

      .b-example-divider {
        width: 100%;
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
      }

      .b-example-vr {
        flex-shrink: 0;
        width: 1.5rem;
        height: 100vh;
      }

      .bi {
        vertical-align: -.125em;
        fill: currentColor;
      }

      .nav-scroller {
        position: relative;
        z-index: 2;
        height: 2.75rem;
        overflow-y: hidden;
      }

      .nav-scroller .nav {
        display: flex;
        flex-wrap: nowrap;
        padding-bottom: 1rem;
        margin-top: -1px;
        overflow-x: auto;
        text-align: center;
        white-space: nowrap;
        -webkit-overflow-scrolling: touch;
      }

      .btn-bd-primary {
        --bd-violet-bg: #712cf9;
        --bd-violet-rgb: 112.520718, 44.062154, 249.437846;

        --bs-btn-font-weight: 600;
        --bs-btn-color: var(--bs-white);
        --bs-btn-bg: var(--bd-violet-bg);
        --bs-btn-border-color: var(--bd-violet-bg);
        --bs-btn-hover-color: var(--bs-white);
        --bs-btn-hover-bg: #6528e0;
        --bs-btn-hover-border-color: #6528e0;
        --bs-btn-focus-shadow-rgb: var(--bd-violet-rgb);
        --bs-btn-active-color: var(--bs-btn-hover-color);
        --bs-btn-active-bg: #5a23c8;
        --bs-btn-active-border-color: #5a23c8;
      }

      .bd-mode-toggle {
        z-index: 1500;
      }

      .bd-mode-toggle .dropdown-menu .active .bi {
        display: block !important;
      }
    </style>

    
    <!-- Custom styles for this template -->
    <link href="https://getbootstrap.com/docs/5.3/examples/sidebars/sidebars.css" rel="stylesheet">
  </head>
  <body>
	  <svg xmlns="http://www.w3.org/2000/svg" class="d-none">
      <symbol id="check2" viewBox="0 0 16 16">
        <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z"/>
      </symbol>
      <symbol id="circle-half" viewBox="0 0 16 16">
        <path d="M8 15A7 7 0 1 0 8 1v14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z"/>
      </symbol>
      <symbol id="moon-stars-fill" viewBox="0 0 16 16">
        <path d="M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z"/>
        <path d="M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z"/>
      </symbol>
      <symbol id="sun-fill" viewBox="0 0 16 16">
        <path d="M8 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z"/>
      </symbol>
    </svg>
    <div class="dropdown position-fixed bottom-0 end-0 mb-3 me-3 bd-mode-toggle">
      <button class="btn btn-bd-primary py-2 dropdown-toggle d-flex align-items-center"
              id="bd-theme"
              type="button"
              aria-expanded="false"
              data-bs-toggle="dropdown"
              aria-label="Toggle theme (auto)">
        <svg class="bi my-1 theme-icon-active" width="1em" height="1em"><use href="#circle-half"></use></svg>
        <span class="visually-hidden" id="bd-theme-text">Toggle theme</span>
      </button>
      <ul class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="bd-theme-text">
        <li>
          <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="light" aria-pressed="false">
            <svg class="bi me-2 opacity-50" width="1em" height="1em"><use href="#sun-fill"></use></svg>
            Light
            <svg class="bi ms-auto d-none" width="1em" height="1em"><use href="#check2"></use></svg>
          </button>
        </li>
        <li>
          <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="dark" aria-pressed="false">
            <svg class="bi me-2 opacity-50" width="1em" height="1em"><use href="#moon-stars-fill"></use></svg>
            Dark
            <svg class="bi ms-auto d-none" width="1em" height="1em"><use href="#check2"></use></svg>
          </button>
        </li>
        <li>
          <button type="button" class="dropdown-item d-flex align-items-center active" data-bs-theme-value="auto" aria-pressed="true">
            <svg class="bi me-2 opacity-50" width="1em" height="1em"><use href="#circle-half"></use></svg>
            Auto
            <svg class="bi ms-auto d-none" width="1em" height="1em"><use href="#check2"></use></svg>
          </button>
        </li>
      </ul>
    </div>
	  
<main class="d-flex flex-nowrap">
  <h1 class="visually-hidden">SMMA</h1>

  <div class="d-flex flex-column flex-shrink-0 p-3 text-bg-dark" style="width: 280px;">
    <a href="../../Downloads/Captura.png" class="d-flex align-items-center mb-3 mb-md-0 me-md-auto text-white text-decoration-none">
      <img src="../imgs/CapturaFondo.png" alt="logo" width="50" height="42">
      <span class="fs-4">SMMA</span>
    </a>
    <hr>
    <ul class="nav nav-pills flex-column mb-auto">
      <li class="nav-item">
        <a href="Administrador/NodosIoT.htm" class="nav-link text-white" aria-current="page">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi pe-none me-2" viewBox="0 0 16 16">
			  <path d="M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L2 8.207V13.5A1.5 1.5 0 0 0 3.5 15h9a1.5 1.5 0 0 0 1.5-1.5V8.207l.646.647a.5.5 0 0 0 .708-.708L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293zM13 7.207V13.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5V7.207l5-5z"/>
		  </svg>
          Inicio
        </a>
      </li>
	  <li>
        <a href="../index.htm" class="nav-link text-white">
		  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi pe-none me-2" viewBox="0 0 16 16">
		  <path d="M8 1a.5.5 0 0 1 .5.5v5.243L9 7.1V4.72C9 3.77 9.77 3 10.72 3c.524 0 1.023.27 1.443.592.431.332.847.773 1.216 1.229.736.908 1.347 1.946 1.58 2.48.176.405.393 1.16.556 2.011.165.857.283 1.857.24 2.759-.04.867-.232 1.79-.837 2.33-.67.6-1.622.556-2.741-.004l-1.795-.897A2.5 2.5 0 0 1 9 11.264V8.329l-1-.715-1 .715V7.214c-.1 0-.202.03-.29.093l-2.5 1.786a.5.5 0 1 0 .58.814L7 8.329v2.935A2.5 2.5 0 0 1 5.618 13.5l-1.795.897c-1.12.56-2.07.603-2.741.004-.605-.54-.798-1.463-.838-2.33-.042-.902.076-1.902.24-2.759.164-.852.38-1.606.558-2.012.232-.533.843-1.571 1.579-2.479.37-.456.785-.897 1.216-1.229C4.257 3.27 4.756 3 5.28 3 6.23 3 7 3.77 7 4.72V7.1l.5-.357V1.5A.5.5 0 0 1 8 1m3.21 8.907a.5.5 0 1 0 .58-.814l-2.5-1.786A.5.5 0 0 0 9 7.214V8.33z"/>
		</svg>
          Monitoreo
        </a>
      </li>
      <li>
        <a href="Metricas.htm" class="nav-link active">
		  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi pe-none me-2" viewBox="0 0 16 16">
		  <path fill-rule="evenodd" d="M6 1h6v7a.5.5 0 0 1-.757.429L9 7.083 6.757 8.43A.5.5 0 0 1 6 8z"/>
		  <path d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2"/>
		  <path d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1z"/>
		</svg>
          Historial
        </a>
      </li>
      <li>
        <a href="contacto.htm" class="nav-link text-white">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi pe-none me-2" viewBox="0 0 16 16">
			  <path d="M10.5 8.5V3.707l.854-.853A.5.5 0 0 0 11.5 2.5v-2A.5.5 0 0 0 11 0H9.5a.5.5 0 0 0-.5.5v8zM5 7c0 .334-.164.264-.415.157C4.42 7.087 4.218 7 4 7s-.42.086-.585.157C3.164 7.264 3 7.334 3 7a1 1 0 0 1 2 0"/>
			  <path d="M4 3h4v1H6.646A4 4 0 0 1 8 7v6h7V7a3 3 0 0 0-3-3V3a4 4 0 0 1 4 4v6a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V7a4 4 0 0 1 4-4m0 1a3 3 0 0 0-3 3v6h6V7a3 3 0 0 0-3-3"/>
		  </svg>
          Contacto
        </a>
      </li>
	  <li>
        <a href="nosotros.htm" class="nav-link text-white">
			  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi pe-none me-2" viewBox="0 0 16 16">
			  <path d="M9 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0m-9 8c0 1 1 1 1 1h10s1 0 1-1-1-4-6-4-6 3-6 4m13.5-8.09c1.387-1.425 4.855 1.07 0 4.277-4.854-3.207-1.387-5.702 0-4.276Z"/>
			</svg>
          Acerca de nosotros
        </a>
      </li>
    </ul>
    <hr>
    <div class="dropdown">
      <a href="#" class="d-flex align-items-center text-white text-decoration-none dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        <img src="../imgs/user.jpg" alt="" width="32" height="32" class="rounded-circle me-2">
        <strong>Cuvalles</strong>
      </a>
      <ul class="dropdown-menu dropdown-menu-dark text-small shadow">
       <!-- <li><a class="dropdown-item" href="#">Opciones x</a></li>
        <li><a class="dropdown-item" href="#">Ajustes</a></li>-->
        <li><a class="dropdown-item" href="perfil.htm">Perfil</a></li>
        <li><hr class="dropdown-divider"></li>
        <li><a class="dropdown-item" href="login.html">Cerrar Cesión</a></li>
      </ul>
    </div>
  </div>

  <div class="b-example-divider b-example-vr"></div>
	
  <main style="overflow-y: auto; max-height: 100vh; width: 100vw; padding: 1rem; position: relative;">
  <div class="container-fluid px-0">
    <div class="row gx-0">
      <div class="col-12 mb-3">
        <div class="card">
          <div class="card-body">

            <!-- FORMULARIO DE UBICACIÓN -->
            <div class="d-flex justify-content-between align-items-center mb-2">
              <h5 class="card-title mb-0">Buscar Nodo por Ubicación</h5>
              <button class="btn btn-sm btn-outline-secondary" data-bs-toggle="collapse" data-bs-target="#collapseFormularioUbicacion" aria-expanded="true">
                Mostrar / Ocultar
              </button>
            </div>

            <div id="collapseFormularioUbicacion" class="collapse show">
              <form id="busqueda-form" class="row g-3 needs-validation mb-4" novalidate>
                <div class="col-md-3">
                  <label for="pais" class="form-label">País</label>
                  <select class="form-select" id="pais" required>
                    <option value="">Seleccionar...</option>
                  </select>
                </div>
                <div class="col-md-3">
                  <label for="estado" class="form-label">Estado</label>
                  <select class="form-select" id="estado" required>
                    <option value="">Seleccionar...</option>
                  </select>
                </div>
                <div class="col-md-3">
                  <label for="municipio" class="form-label">Municipio</label>
                  <select class="form-select" id="municipio" required>
                    <option value="">Seleccionar...</option>
                  </select>
                </div>
                <div class="col-md-3">
                  <label for="localidad" class="form-label">Localidad</label>
                  <select class="form-select" id="localidad" required>
                    <option value="">Seleccionar...</option>
                  </select>
                </div>
                <div class="col-md-3">
                  <button type="submit" class="btn btn-primary w-100">Buscar Nodos</button>
                </div>
              </form>
            </div>
            <hr>

            <!-- RESULTADOS DE NODOS -->
            <div class="d-flex justify-content-between align-items-center mb-2">
              <h5 class="card-title mb-0">Resultados</h5>
              <button class="btn btn-sm btn-outline-secondary" data-bs-toggle="collapse" data-bs-target="#collapseResultadosContent">
                Mostrar / Ocultar
              </button>
            </div>
            <div id="collapseResultadosContent" class="collapse show mb-4" style="max-height: 300px; overflow-y: auto;">
              <ul class="list-group" id="resultado-lista">
                <li class="list-group-item">Usa los filtros para ver los nodos.</li>
              </ul>
            </div>
            <hr>

            <!-- FORMULARIO DE FECHA Y CONTAMINANTES -->
            <div class="d-flex justify-content-between align-items-center mb-2">
              <h5 class="card-title mb-0">Filtrar por Fecha y Contaminantes</h5>
              <button class="btn btn-sm btn-outline-secondary" data-bs-toggle="collapse" data-bs-target="#collapseFiltroFecha" aria-expanded="true">
                Mostrar / Ocultar
              </button>
            </div>

            <div id="collapseFiltroFecha" class="collapse show">
              <form id="filtro-monitoreo-form" class="row g-3">
                <div class="col-md-3">
                  <label for="fecha-inicio" class="form-label">Fecha Inicio</label>
                  <input type="date" class="form-control" id="fecha-inicio" required>
                </div>
                <div class="col-md-3">
                  <label for="fecha-fin" class="form-label">Fecha Fin</label>
                  <input type="date" class="form-control" id="fecha-fin" required>
                </div>
                <div class="col-12">
                  <div class="row mx-3" id="checkbox-contaminantes"></div>
                </div>
                <div class="col-md-3">
				  <button type="submit" class="btn btn-success w-100">Ver Monitoreo</button>
				</div>
				<div class="col-md-3">
				  <button id="btn-descargar-csv" type="button" class="btn btn-outline-primary w-100">Descargar CSV</button>
				</div>
              </form>
            </div>
          </div> <!-- card-body -->
        </div> <!-- card -->
      </div> <!-- col-12 -->

      <!-- GRÁFICAS -->
      <div class="col-12">
        <div class="row" id="charts-row">
          <!-- Gráficas generadas dinámicamente -->
        </div>
      </div>
    </div> <!-- row -->
  </div> <!-- container-fluid -->

	 <!-- Modal para mapa -->
	<div class="modal fade" id="modalMapa" tabindex="-1" aria-labelledby="modalMapaLabel" aria-hidden="true">
	  <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
		<div class="modal-content">
		  <div class="modal-header">
			<h5 class="modal-title" id="modalMapaLabel">Ubicación del Nodo</h5>
			<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
		  </div>
		  <div class="modal-body">
			<iframe id="iframeMapa" width="100%" height="450" style="border:0;" allowfullscreen="" loading="lazy"
			  referrerpolicy="no-referrer-when-downgrade"></iframe>
		  </div>
		</div>
	  </div>
	</div>
	
	  
	<div id="cargando-main" style="
	  position: absolute;
	  top: 0; left: 0;
	  width: 100%;
	  height: 100%;
	  background-color: rgba(255, 255, 255, 0.7);
	  z-index: 50;
	  display: none;
	  justify-content: center;
	  align-items: center;
	">
	  <div class="text-center">
		<div class="spinner-border text-primary" role="status"></div>
		<div class="mt-2 fw-bold text-primary">Cargando datos...</div>
	  </div>
	</div>
	  
	  
</main>

<script>
  const proxyUrl = 'https://cors-anywhere.herokuapp.com/';
  const apiBase = `${proxyUrl}https://smma-aobk.onrender.com`;

  const selectPais = document.getElementById('pais');
  const selectEstado = document.getElementById('estado');
  const selectMunicipio = document.getElementById('municipio');
  const selectLocalidad = document.getElementById('localidad');
  const formBusqueda = document.getElementById('busqueda-form');
  const resultadoLista = document.getElementById('resultado-lista');
  const filtroMonitoreoForm = document.getElementById('filtro-monitoreo-form');
  const checkboxContaminantes = document.getElementById('checkbox-contaminantes');
  const chartsRow = document.getElementById('charts-row');
  const btnDescargarCSV = document.getElementById('btn-descargar-csv');

  const inputInicio = document.getElementById('fecha-inicio');
  const inputFin = document.getElementById('fecha-fin');

  let zonasDisponibles = [];

  const colores = ['#0b62a4', '#7A92A3', '#4DA74D', '#AFD8F8', '#EDC240', '#cb4b4b', '#9440ed'];

  function mostrarLoading(mostrar) {
    const cargando = document.getElementById('cargando-main');
    if (cargando) cargando.style.display = mostrar ? 'flex' : 'none';
  }

  function llenarSelect(select, items) {
    select.innerHTML = '<option value="">Seleccionar...</option>';
    [...new Set(items)].filter(Boolean).sort().forEach(item => {
      const option = document.createElement('option');
      option.value = item;
      option.textContent = item;
      select.appendChild(option);
    });
  }

  function abrirMapa(coordenadas) {
    if (!coordenadas || !coordenadas.includes(',')) {
      alert('Coordenadas inválidas');
      return;
    }

    const [lat, lng] = coordenadas.split(',').map(c => c.trim());

    if (isNaN(lat) || isNaN(lng)) {
      alert('Coordenadas inválidas');
      return;
    }

    const src = `https://maps.google.com/maps?q=${lat},${lng}&z=16&output=embed`;
    document.getElementById('iframeMapa').src = src;

    const modal = new bootstrap.Modal(document.getElementById('modalMapa'));
    modal.show();
  }

  async function obtenerZonas() {
    mostrarLoading(true);
    try {
      const res = await fetch(`${apiBase}/api/zonas`);
      if (!res.ok) throw new Error('Error al obtener zonas');
      zonasDisponibles = await res.json();
      llenarSelect(selectPais, zonasDisponibles.map(z => z.pais));
    } catch (error) {
      console.error('Error al cargar zonas:', error);
    } finally {
      mostrarLoading(false);
    }
  }

  async function obtenerDatosUbicacion(filtro = {}) {
    mostrarLoading(true);
    try {
      const res = await fetch(`${apiBase}/api/nodos`);
      if (!res.ok) throw new Error('Error al obtener nodos');
      const nodos = await res.json();

      const mapaZonas = new Map(zonasDisponibles.map(z => [z.id_zona || z._id, z]));

      const nodosFiltrados = nodos.filter(nodo => {
        const zona = mapaZonas.get(nodo.id_zona) || {};
        return (!filtro.pais || zona.pais === filtro.pais) &&
               (!filtro.estado || zona.estado === filtro.estado) &&
               (!filtro.municipio || zona.municipio === filtro.municipio) &&
               (!filtro.localidad || zona.localidad === filtro.localidad);
      });

      resultadoLista.innerHTML = '';
      checkboxContaminantes.innerHTML = '';

      if (nodosFiltrados.length === 0) {
        resultadoLista.innerHTML = '<li class="list-group-item">No se encontraron nodos con esos filtros.</li>';
        return;
      }

      nodosFiltrados.forEach(nodo => {
        const li = document.createElement('li');
        li.className = 'list-group-item list-group-item-action';
        li.style.cursor = 'pointer';
        li.innerHTML = `
          <div class="d-flex justify-content-between align-items-center">
            <span>${nodo.nombre}</span>
            ${nodo.cordenadas ? `
              <button class="btn btn-outline-primary btn-sm ms-2" onclick="abrirMapa('${nodo.cordenadas}')">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-globe-americas" viewBox="0 0 16 16">
                <path d="M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0M2.04 4.326c.325 1.329 2.532 2.54 3.717 3.19.48.263.793.434.743.484q-.121.12-.242.234c-.416.396-.787.749-.758 1.266.035.634.618.824 1.214 1.017.577.188 1.168.38 1.286.983.082.417-.075.988-.22 1.52-.215.782-.406 1.48.22 1.48 1.5-.5 3.798-3.186 4-5 .138-1.243-2-2-3.5-2.5-.478-.16-.755.081-.99.284-.172.15-.322.279-.51.216-.445-.148-2.5-2-1.5-2.5.78-.39.952-.171 1.227.182.078.099.163.208.273.318.609.304.662-.132.723-.633.039-.322.081-.671.277-.867.434-.434 1.265-.791 2.028-1.12.712-.306 1.365-.587 1.579-.88A7 7 0 1 1 2.04 4.327Z"/>
                </svg>
              </button>
            ` : '<span class="text-muted small ms-2">(Sin coordenadas)</span>'}
          </div>
        `;

        li.addEventListener('click', async () => {
          localStorage.setItem('nodoSeleccionado', nodo.id_nodo);
          mostrarLoading(true);
          try {
            const resMonitoreos = await fetch(`${apiBase}/api/monitoreos?id_nodo=${nodo.id_nodo}`);
            if (!resMonitoreos.ok) throw new Error('Error al obtener monitoreos');
            const monitoreos = await resMonitoreos.json();
            if (monitoreos.length === 0) {
              checkboxContaminantes.innerHTML = '<p class="text-muted">No hay monitoreos disponibles para este nodo.</p>';
              return;
            }

            const fechas = monitoreos.map(m => m.fecha).sort();
            if (!inputInicio.value) inputInicio.value = fechas[0];
            if (!inputFin.value) inputFin.value = fechas[fechas.length - 1];
            inputInicio.max = fechas[fechas.length - 1];
            inputFin.min = fechas[0];

            const monitoreoReciente = monitoreos[monitoreos.length - 1];
            renderizarCheckboxContaminantes(monitoreoReciente);
          } catch (error) {
            console.error('Error al obtener monitoreos:', error);
          } finally {
            mostrarLoading(false);
          }
        });

        resultadoLista.appendChild(li);
      });
    } catch (error) {
      console.error('Error:', error);
    } finally {
      mostrarLoading(false);
    }
  }

  inputInicio.addEventListener('input', () => {
    inputFin.min = inputInicio.value || '';
  });

  inputFin.addEventListener('input', () => {
    inputInicio.max = inputFin.value || '';
  });

  function renderizarCheckboxContaminantes(monitoreo) {
    checkboxContaminantes.innerHTML = '';
    if (!monitoreo || !Array.isArray(monitoreo.Datos)) return;

    const tipos = [...new Set(monitoreo.Datos.map(d => d.tipo))];
    tipos.forEach((tipo, i) => {
      const div = document.createElement('div');
      div.className = 'form-check col-md-2 mb-2';
      div.innerHTML = `
        <input class="form-check-input" type="checkbox" value="${tipo}" id="contaminante-${i}" checked>
        <label class="form-check-label" for="contaminante-${i}">${tipo}</label>
      `;
      checkboxContaminantes.appendChild(div);
    });
  }

  selectPais.addEventListener('change', () => {
    const estados = zonasDisponibles.filter(z => z.pais === selectPais.value).map(z => z.estado);
    llenarSelect(selectEstado, estados);
    selectMunicipio.innerHTML = '<option value="">Seleccionar...</option>';
    selectLocalidad.innerHTML = '<option value="">Seleccionar...</option>';
  });

  selectEstado.addEventListener('change', () => {
    const municipios = zonasDisponibles.filter(z => z.pais === selectPais.value && z.estado === selectEstado.value).map(z => z.municipio);
    llenarSelect(selectMunicipio, municipios);
    selectLocalidad.innerHTML = '<option value="">Seleccionar...</option>';
  });

  selectMunicipio.addEventListener('change', () => {
    const localidades = zonasDisponibles.filter(z => z.pais === selectPais.value && z.estado === selectEstado.value && z.municipio === selectMunicipio.value).map(z => z.localidad);
    llenarSelect(selectLocalidad, localidades);
  });

  formBusqueda.addEventListener('submit', e => {
    e.preventDefault();
    obtenerDatosUbicacion({
      pais: selectPais.value,
      estado: selectEstado.value,
      municipio: selectMunicipio.value,
      localidad: selectLocalidad.value
    });
  });

  filtroMonitoreoForm.addEventListener('submit', async e => {
    e.preventDefault();
    const nodoSeleccionado = localStorage.getItem('nodoSeleccionado');
    if (!nodoSeleccionado) return alert('Selecciona un nodo primero.');

    const fechaInicio = inputInicio.value;
    const fechaFin = inputFin.value;

    let url = `${apiBase}/api/monitoreos?id_nodo=${nodoSeleccionado}`;
    if (fechaInicio) url += `&fecha_ini=${fechaInicio}`;
    if (fechaFin) url += `&fecha_fin=${fechaFin}`;

    mostrarLoading(true);
    try {
      const res = await fetch(url);
      if (!res.ok) throw new Error('Error al obtener datos');
      const monitoreos = await res.json();

      window.monitoreosFiltrados = monitoreos;

      if (!monitoreos.length) {
        chartsRow.innerHTML = '<p class="text-muted">No hay datos en ese rango.</p>';
        return;
      }

      const tiposSeleccionados = Array.from(checkboxContaminantes.querySelectorAll('input[type="checkbox"]:checked')).map(cb => cb.value);
      if (!tiposSeleccionados.length) return alert('Selecciona al menos un tipo de dato.');

      const datosParaGrafica = monitoreos.map(m => {
        const base = { fecha_hora: `${m.fecha} ${m.hora}` };
        tiposSeleccionados.forEach(tipo => {
          const encontrado = m.Datos.find(d => d.tipo === tipo);
          base[tipo] = encontrado ? parseFloat(encontrado.valor) || 0 : 0;
        });
        return base;
      });

      chartsRow.innerHTML = '';
      tiposSeleccionados.forEach((tipo, i) => {
        const col = document.createElement('div');
        col.className = 'col-md-12 mb-4';

        const card = document.createElement('div');
        card.className = 'card shadow';

        const cardBody = document.createElement('div');
        cardBody.className = 'card-body';

        const title = document.createElement('h6');
        title.className = 'card-title';
        title.textContent = `Gráfica de ${tipo.toUpperCase()}`;

        const chartDiv = document.createElement('div');
        chartDiv.id = `grafica-${tipo}`;
        chartDiv.style.height = '300px';

        cardBody.appendChild(title);
        cardBody.appendChild(chartDiv);
        card.appendChild(cardBody);
        col.appendChild(card);
        chartsRow.appendChild(col);

        const datosTipo = datosParaGrafica.map(d => ({
          fecha_hora: d.fecha_hora,
          valor: d[tipo]
        }));

        new Morris.Line({
          element: chartDiv.id,
          data: datosTipo,
          xkey: 'fecha_hora',
          ykeys: ['valor'],
          labels: [tipo.toUpperCase()],
          parseTime: false,
          lineColors: [colores[i % colores.length]],
          resize: true
        });
      });
    } catch (err) {
      console.error('Error al graficar:', err);
      chartsRow.innerHTML = '<p class="text-danger">Error al generar gráficas.</p>';
    } finally {
      mostrarLoading(false);
    }
  });

  document.getElementById('btn-descargar-csv').addEventListener('click', () => {
    if (window.monitoreosFiltrados) {
      descargarCSVDeMonitoreos(window.monitoreosFiltrados);
    } else {
      alert('Primero realiza una búsqueda con el filtro.');
    }
  });

  function descargarCSVDeMonitoreos(monitoreos) {
    if (!monitoreos.length) return alert('No hay datos para descargar.');

    const encabezados = ['id_monitoreo', 'id_nodo', 'fecha', 'hora', 'tipo', 'valor'];
    const filas = [];

    monitoreos.forEach(m => {
      m.Datos.forEach(d => {
        filas.push([
          m.id_monitoreo,
          m.id_nodo,
          m.fecha,
          m.hora,
          d.tipo,
          d.valor
        ]);
      });
    });

    let csvContent = encabezados.join(',') + '\n';
    csvContent += filas.map(fila => fila.map(val => `"${val}"`).join(',')).join('\n');

    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.setAttribute('href', url);
    link.setAttribute('download', 'monitoreo.csv');
    link.style.display = 'none';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  }

  // 🚀 Mostrar loading desde el principio
  mostrarLoading(true);
  obtenerZonas();
</script>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>

						
</main>
<script src="https://getbootstrap.com/docs/5.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://getbootstrap.com/docs/5.3/examples/sidebars/sidebars.js"></script>
</body>
</html>